"""
Copyright (c) 2017, Jairus Martin.

Distributed under the terms of the GPL v3 License.

The full license is in the file LICENSE, distributed with this software.

Created on Dec 10, 2015

@author: jrm
"""
import inspect
from atom.api import Enum
from enaml.core.api import Looper, Conditional
from enaml.widgets.api import  Container, Menu, Action
from enamlx.widgets.api import TreeView, TreeViewItem, TreeViewColumn
from declaracad.core.api import DockItem
from declaracad.core.utils import load_icon


enamldef ToolboxDockItem(DockItem):
    title = 'Toolbox'
    name = 'toolbox-item'
    icon = load_icon('box')
    closable = False
    Container:
        padding = 0
        TreeView: tree:
            horizontal_headers = ['Name', 'Type']
            horizontal_stretch = True
            items << plugin.tools
            Looper:
                iterable << tree.items
                TreeViewItem:
                    text = loop_item.name
                    tool_tip = loop_item.doc
                    items = sorted([m for n, m in loop_item.declaration.members().items()
                                    if not n.startswith("_")], key=lambda m:m.name)
                    Menu:
                        Action:
                            text = "Class docs"
                            attr url = (loop_item.proxy.reference.default_value_mode[-1]
                                            if hasattr(loop_item.proxy, 'reference') else '')
                            visible << bool(url)
                            triggered ::
                                docs = plugin.workbench.get_plugin("declaracad.docs")
                                docs.set_url(url)
                        Action:
                            separator = True
                        Action:
                            text = "Implementation source"
                            attr src = inspect.getsource(loop_item.proxy)
                            visible << bool(src)
                            triggered ::
                                docs = plugin.workbench.get_plugin("declaracad.docs")
                                docs.set_source(src)
                        Action:
                            text = "Declaration source"
                            attr src = inspect.getsource(loop_item.declaration)
                            visible << bool(src)
                            triggered ::
                                docs = plugin.workbench.get_plugin("declaracad.docs")
                                docs.set_source(src)
                    TreeViewColumn:
                        attr base = loop_item.declaration.__bases__[0]
                        text = base.__name__
                        tool_tip = inspect.getdoc(base)
                    Looper:
                        iterable << parent.items
                        TreeViewItem:
                            text = loop_item.name
                            tool_tip = inspect.getdoc(loop_item)
                            TreeViewColumn:
                                text = loop_item.__class__.__name__
                                tool_tip = ("\n".join(map(str,loop_item.items))
                                                if isinstance(loop_item, Enum) else "")


